// FUSE.JS
!function(t){function e(t,n){this.list=t,this.options=n=n||{};var i,o,s,r;for(i=0,r=["sort","shouldSort"],o=r.length;o>i;i++)s=r[i],this.options[s]=s in n?n[s]:e.defaultOptions[s];for(i=0,r=["searchFn","sortFn","keys","getFn","include"],o=r.length;o>i;i++)s=r[i],this.options[s]=n[s]||e.defaultOptions[s]}var n=function(t,e){if(e=e||{},this.options=e,this.options.location=e.location||n.defaultOptions.location,this.options.distance="distance"in e?e.distance:n.defaultOptions.distance,this.options.threshold="threshold"in e?e.threshold:n.defaultOptions.threshold,this.options.maxPatternLength=e.maxPatternLength||n.defaultOptions.maxPatternLength,this.pattern=e.caseSensitive?t:t.toLowerCase(),this.patternLen=t.length,this.patternLen>this.options.maxPatternLength)throw new Error("Pattern length is too long");this.matchmask=1<<this.patternLen-1,this.patternAlphabet=this._calculatePatternAlphabet()};n.defaultOptions={location:0,distance:100,threshold:.6,maxPatternLength:32},n.prototype._calculatePatternAlphabet=function(){var t={},e=0;for(e=0;e<this.patternLen;e++)t[this.pattern.charAt(e)]=0;for(e=0;e<this.patternLen;e++)t[this.pattern.charAt(e)]|=1<<this.pattern.length-e-1;return t},n.prototype._bitapScore=function(t,e){var n=t/this.patternLen,i=Math.abs(this.options.location-e);return this.options.distance?n+i/this.options.distance:i?1:n},n.prototype.search=function(t){if(t=this.options.caseSensitive?t:t.toLowerCase(),this.pattern===t)return{isMatch:!0,score:0};var e,n,i,o,s,r,a,h,p,c=t.length,l=this.options.location,f=this.options.threshold,u=t.indexOf(this.pattern,l),d=this.patternLen+c,g=1,m=[];for(-1!=u&&(f=Math.min(this._bitapScore(0,u),f),u=t.lastIndexOf(this.pattern,l+this.patternLen),-1!=u&&(f=Math.min(this._bitapScore(0,u),f))),u=-1,e=0;e<this.patternLen;e++){for(i=0,o=d;o>i;)this._bitapScore(e,l+o)<=f?i=o:d=o,o=Math.floor((d-i)/2+i);for(d=o,s=Math.max(1,l-o+1),r=Math.min(l+o,c)+this.patternLen,a=Array(r+2),a[r+1]=(1<<e)-1,n=r;n>=s;n--)if(p=this.patternAlphabet[t.charAt(n-1)],a[n]=0===e?(a[n+1]<<1|1)&p:(a[n+1]<<1|1)&p|((h[n+1]|h[n])<<1|1)|h[n+1],a[n]&this.matchmask&&(g=this._bitapScore(e,n-1),f>=g)){if(f=g,u=n-1,m.push(u),!(u>l))break;s=Math.max(1,2*l-u)}if(this._bitapScore(e+1,l)>f)break;h=a}return{isMatch:u>=0,score:g}};var i=function(t,e,n){var s,r,a;if(e){a=e.indexOf("."),-1!==a?(s=e.slice(0,a),r=e.slice(a+1)):s=e;var h=t[s];if(h)if(r||"string"!=typeof h&&"number"!=typeof h)if(o.isArray(h))for(var p=0,c=h.length;c>p;p++)i(h[p],r,n);else r&&i(h,r,n);else n.push(h)}else n.push(t);return n},o={deepValue:function(t,e){return i(t,e,[])},isArray:function(t){return"[object Array]"===Object.prototype.toString.call(t)}};e.defaultOptions={id:null,caseSensitive:!1,include:[],shouldSort:!0,searchFn:n,sortFn:function(t,e){return t.score-e.score},getFn:o.deepValue,keys:[]},e.prototype.set=function(t){return this.list=t,t},e.prototype.search=function(t){var e,n,i,s,r=new this.options.searchFn(t,this.options),a=this.list,h=a.length,p=this.options,c=this.options.keys,l=c.length,f=[],u={},d=[],g=function(t,e,n){if(void 0!==t&&null!==t)if("string"==typeof t)i=r.search(t),i.isMatch&&(s=u[n],s?s.score=Math.min(s.score,i.score):(u[n]={item:e,score:i.score},f.push(u[n])));else if(o.isArray(t))for(var a=0;a<t.length;a++)g(t[a],e,n)};if("string"==typeof a[0])for(var m=0;h>m;m++)g(a[m],m,m);else for(var m=0;h>m;m++)for(n=a[m],e=0;l>e;e++)g(p.getFn(n,c[e]),n,m);p.shouldSort&&f.sort(p.sortFn);for(var v=p.id?function(t){f[t].item=p.getFn(f[t].item,p.id)[0]}:function(){},y=function(t){var e;if(p.include.length>0){e={item:f[t].item};for(var t=0;t<p.include.length;t++){var n=p.include[t];e[n]=f[t][n]}}else e=f[t].item;return e},m=0,b=f.length;b>m;m++)v(m),d.push(y(m));return d},"object"==typeof exports?module.exports=e:"function"==typeof define&&define.amd?define(function(){return e}):t.Fuse=e}(this);

//HEAP
window.heap=window.heap||[],heap.load=function(e,t){window.heap.appid=e,window.heap.config=t=t||{};var n=t.forceSSL||"https:"===document.location.protocol,a=document.createElement("script");a.type="text/javascript",a.async=!0,a.src=(n?"https:":"http:")+"//cdn.heapanalytics.com/js/heap-"+e+".js";var o=document.getElementsByTagName("script")[0];o.parentNode.insertBefore(a,o);for(var r=function(e){return function(){heap.push([e].concat(Array.prototype.slice.call(arguments,0)))}},p=["clearEventProperties","identify","setEventProperties","track","unsetEventProperty"],c=0;c<p.length;c++)heap[p[c]]=r(p[c])};
if (window.location.host.indexOf("localhost") == -1)
  heap.load("675302976");
/*****************************************************************************
 * Actual app code
 */
window.Methone = new function() {

  /*****************************************************************************
   * TEMPLATES
   */
  var Template = function(str) {
    this.template = str || '';

    Object.defineProperties(this, {
      modifier: {
        writable: true,
        value: this._modifier
      }
    });

    return this;
  }

  Object.defineProperties(Template.prototype, {
    _regex: {
      writable: false,
      value: /#{(((?!{).)*)}/g
    },

    _modifier: {
      writable: false,
      value: function(match, key) {
        return this[key] || '';
      }
    },

    parse: {
      writable: false,
      value: function(data) {
        return this.template.replace(this._regex, this.modifier.bind(data));
      }
    }
  });

  /*****************************************************************************
   * State vars
   */

  var html = "<%- html %>";
  var master_fuzzyfile = <%- master_fuzzyfile %>;
  var providers = <%- providers %>;
  var conf = window.tbaas_conf;

  var listitem_template = new Template("<%- listitem_template %>");
  var menuitem_template = new Template("<%- menuitem_template %>");
  var startmenuitem_template = new Template("<%- startmenuitem_template %>");
  var startmenudivider_template = new Template("<%- startmenudivider_template %>");
  var option_template = new Template("<option data-href='#{href}'>#{str}</option>");

  var fuzzyModule;
  var fuzz = [];

  var options = {
    keys: ['str']
  }
  var fuse;

  var quick_access_items = [{
    "name": "Lokalbokning - Datasektionen.se",
    "color": "#FDDE00",
    "href": "http://datasektionen.se/sektionen/lokalbokning"
  }, {
    "name": "Protokoll - Datasektionen.se",
    "color": "#FDDE00",
    "href": "http://datasektionen.se/sektionen/formalia/protokoll"
  }, {
    "name": "Organisation - Datasektionen.se",
    "color": "#FDDE00",
    "href": "http://datasektionen.se/sektionen/organisation"
  }, {
    "name": "Näringsliv - Datasektionen.se",
    "color": "#FDDE00",
    "href": "http://datasektionen.se/naringsliv"
  }, ];

  var onShowHandler;
  var onHideHandler;

  /*****************************************************************************
   * Helper methods.
   */
  var processFuzzyFile = function(obj) {
    fuzz = fuzz.concat(obj.fuzzes);
    fuse = new Fuse(fuzz, options);
  }

  function setFilter(elem, filter) {
    if (elem == null ||  !("style" in elem)) return;
    if ("webkitFilter" in elem.style) elem.style.webkitFilter = filter;
    if ("filter" in elem.style) elem.style.filter = filter;
  }


  function get_brightness(hexCode) {
    // strip off any leading #
    hexCode = hexCode.replace('#', '');

    var c_r = parseInt(hexCode.substr(0, 2), 16);
    var c_g = parseInt(hexCode.substr(2, 2), 16);
    var c_b = parseInt(hexCode.substr(4, 2), 16);

    return ((c_r * 299) + (c_g * 587) + (c_b * 114)) / 1000;
  }

  /*****************************************************************************
   * Conf parsing
   */
  if (conf === undefined) {
    console.error("The config was not supplied!!");
    return;
  }

  conf = {
    system_name: conf.system_name || "default",
    target_id: conf.target_id,
    bar_color: conf.bar_color || "#212121",
    primary_color: conf.primary_color || "#E2007F",
    secondary_color: conf.secondary_color || "black",
    fuzzyfile: conf.fuzzyfile || false,
    fuzzy_only: conf.fuzzy_only || false,
    topbar_items: conf.topbar_items ||  [],
    login_text: conf.login_text || null,
    login_href: conf.login_href ||  "#",
    delta_invert: conf.delta_invert || false
  };


  /*****************************************************************************
   * Injection!
   */
  var root = document.getElementById(conf.target_id);
  var getElementFun = function(d) {
    return document.getElementById(d);
  }

  if (!root) {
    console.error("Did not find target element " + conf.target_id);
    return;
  }

  if ("createShadowRoot" in root) {
    root = root.createShadowRoot();
    getElementFun = function(d) {
      return root.getElementById(d);
    }
  }



  root.innerHTML = html;



  /*****************************************************************************
   * Coloring
   */

  var superdelta = getElementFun("superdelta");
  var delta_logo = getElementFun("delta_logo");
  var startmenu = getElementFun("startmenu");
  var loginbtn = getElementFun("login");
  var bar = getElementFun("methone_header");
  var nav = getElementFun("methone_nav");
  var menu_btn = getElementFun("methone_menu_btn");

  superdelta.style.backgroundColor = conf.primary_color;

  delta_logo.style.fill = conf.secondary_color;
  delta_logo.style.stroke = conf.secondary_color;

  bar.style.backgroundColor = conf.bar_color;

  Array.prototype
       .slice
       .call(document.getElementsByClassName("navelement"))
       .map(function(x) {x.style.color = conf.secondary_color});

  loginbtn.style.backgroundColor = conf.primary_color;
  loginbtn.style.color = conf.secondary_color;

  menu_btn.style.backgroundColor = conf.primary_color;
  menu_btn.style.color = conf.secondary_color;

  if (conf.login_text) {
    loginbtn.children[0].innerHTML = conf.login_text;
  } else {
    loginbtn.style.display = "none";
  }
  loginbtn.href = conf.login_href;


  if (!conf.fuzzy_only) {
    /*****************************************************************************
     * Menu building
     */

    var buildMenu = function() {
      var str = "";
      for (var i in conf.topbar_items) {
        if ("new_window" in conf.topbar_items[i] && conf.topbar_items[i].new_window) {
          conf.topbar_items[i].target = 'target="_blank"';
        }
        str += menuitem_template.parse(conf.topbar_items[i]);
      }

      nav.innerHTML = str;

    }
    buildMenu();


  } else { // Fuzz only
    var mh = getElementFun("methone_header");
    mh.parentNode.removeChild(mh);
  }

  /*****************************************************************************
   * Fuzz!!!!!
   */
  fuzzyModule = function() {
    var txtfuzz = getElementFun("txt_fuzzy");
    var resultfuzz = getElementFun("fuzzy_results");
    var quick_access_elem = getElementFun("quick_access");

    var box = getElementFun("gobox");
    var gobox_inner = getElementFun("inner_gobox");
    var input_wrap = getElementFun("input_wrap");

    var selectedElementIndex = 0;
    var numberofresults = 0;

    function isVisible() {
      return box.style.display != "none";
    }

    function toggleVisibility() {
      if (!isVisible() && window.innerWidth >= 600) {
        showDialog();
      } else {
        hideDialog();
      }
    }


    this.setup = function() {
      processFuzzyFile(master_fuzzyfile);

      txtfuzz.addEventListener("keyup", this.onKeyEntered);
      document.body.addEventListener("keydown", this.onGlobalShortcut);

      superdelta.addEventListener("click", toggleVisibility);
      box.addEventListener("click", function(event) {
        //Exit by clicking outside of the thing, but do not trigger when content is clicked.
        if (event.target == box) toggleVisibility();
      });

      renderQuickAccessList();
    }

    function renderQuickAccessList() {

      var str = "";
      var count = 0;
      for (var i in quick_access_items) {
        quick_access_items[i].cmd = "CTRL+" + (++count);
        str += listitem_template.parse(quick_access_items[i]);
      }
      quick_access_elem.innerHTML = str;
    }

    this.onKeyEntered = function(event) {
      var val = txtfuzz.value;
      var results = fuse.search(val);
      var items;

      if (!val) {
        results = providers.providers;

      }
      var str = "";
      for (var i in results) {
        if ("divider" in results[i]) continue;
        str += listitem_template.parse(results[i]);
      }
      resultfuzz.innerHTML = str;
      numberofresults = results.length;

      //console.log(event)
      switch (event.keyCode) {
        case 38: // UP
          event.preventDefault();
          selectedElementIndex = Math.max((selectedElementIndex - 1) % numberofresults, 0);
          break;
        case 40: // Down
          selectedElementIndex = (selectedElementIndex + 1) % numberofresults;
          break;
        case 39: // right
        case 37: //left
          selectedElementIndex = (selectedElementIndex + numberofresults/2) % numberofresults;
          break;
        case 13: // Enter
          document.location = results[selectedElementIndex].href;
          resultfuzz.parentNode.parentNode.style.display = "none";
          break;
        default:
          selectedElementIndex = 0;
          break;

      }

      //quick_access
      if (event.keyCode >= 49 && event.keyCode <= 55 && event.ctrlKey) {
        window.location = quick_access_items[event.keyCode - 49].href;
      }

      var color = results[selectedElementIndex % numberofresults].color;

      var element = resultfuzz.children[selectedElementIndex % numberofresults];

      element.children[0].children[1].style.color = (get_brightness(color) > 200) ? "black" : "white";
      element.style.background = color;

    };


    this.onGlobalShortcut = function(event) {

      //console.log(event)

      if (event.keyCode == 27 && box.style.display != "none") { //escape
        hideDialog()
        return;
      }
      if ((event.metaKey === true || event.ctrlKey === true) && event.keyCode === 75) { // cmd+k
        event.preventDefault();
        toggleVisibility();
      }
    };

    this.showDialog = function() {
      gobox_inner.style.marginTop = 200;
      box.style.display = "block";
      box.style.top = "50px";
      box.style.opacity = 0;
      box.style.transition = "opacity 300ms ease-out";
      gobox_inner.style.transition = "margin-top 250ms cubic-bezier(0, 0, 0, 0.995)";
      setTimeout(function() {
        gobox_inner.style.marginTop = 50;
        setFilter(box, "");
        box.style.opacity = 1;
      }, 10);
      txtfuzz.focus();

      //Dirty trigger menu render
      var ev = {keyCode: 0, ctrlKey: false};
      this.onKeyEntered(ev);

      if (onShowHandler) onShowHandler();
    }


    function hideDialog() {
      box.style.display = "none";
      box.style.top = window.innerHeight;

      if (onHideHandler) onHideHandler();

    }

    setTimeout(this.setup, 500); // Let the rest of the page load first
  }();

  /*****************************************************************************
   * Resize mgmt
   */
   var width = Array.prototype
                     .slice
                     .call(getElementFun("methone_nav").children)
                     .map(function(element) {return element.offsetWidth})
                     .reduce(function(total, item) {return total + item}, 0)
                     + getElementFun("superdelta").offsetWidth
                     + getElementFun("methone_menu_btn").offsetWidth;

  function showNav(retainMenu) {
    nav.style.display = "inline-block";
    if (!retainMenu) menu_btn.style.display = "none";
    if(conf.login_text)
      loginbtn.style.display="inline-block";
  }

  function hideNav() {
    nav.style.display = "none";
    menu_btn.style.display="inline-block"
    loginbtn.style.display="none";
  }

  function updateNav() {
    if(window.innerWidth < width) {
      hideNav();
    } else {
      showNav();
    }
  }

  window.addEventListener('resize', updateNav);

  menu_btn.addEventListener('click', function() {
    if(nav.style.display == "none") {
      showNav(true);
    } else {
      hideNav();
    }
  });

  updateNav();

  /*****************************************************************************
   * API
   */

  this.addFuzzyEntry = function(name, str, color, href) {
    fuzz.push({
      str: str,
      name: name,
      color: color,
      href: href
    });
  };

  this.setMenu = function(menuspec) {
    conf.topbar_items = menuspec;
    buildMenu();
  };

  this.setLoginButtonText = function(text) {
    if (!text) {
      loginbtn.style.display = "none";
    } else {
      loginbtn.style.display = "block";
      loginbtn.value = text;
    }
  };
  this.setOnLoginButtonClicked = function(handler) {
    loginbtn.addEventListener("click", handler);
  };
  this.setOnShowHandler = function(handler) {
    onShowHandler = handler;
  };
  this.setOnHideHandler = function(handler) {
    onHideHandler = handler;
  };

  //Export conf
  this.conf = conf;
};
